/**
 * Factory function for creating tree nodes.
 */
val create = fun value, left, right -> {"value": value, "left": left, "right": right}
val tree = create(2, create(1, create(0, nil, nil), nil), create(3, nil, nil))

val traverse = fun node -> {
    if node.left != nil {
        traverse(node.left)
    }

 	println(node.value)

 	if node.right != nil {
 		traverse(node.right)
 	}
}

val insert = fun tree, value -> {
    if value == tree.value {
        return
    }

    if value < tree.value {
        if tree.left == nil {
            tree.left = create(value, nil, nil)
        } else {
            insert(tree.left, value)
        }
    } else {
        if tree.right == nil {
            tree.right = create(value, nil, nil)
        } else {
            insert(tree.right, value)
        }
    }
}

traverse(tree)

println("-----")

insert(tree, 0)
insert(tree, 6)
insert(tree, 5)

traverse(tree)